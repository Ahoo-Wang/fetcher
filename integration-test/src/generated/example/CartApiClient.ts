import { type ApiMetadata, type ApiMetadataCapable, type ParameterRequest, api, attribute, autoGeneratedError, get, path, post, request } from "@ahoo-wang/fetcher-decorator";
import { JsonEventStreamResultExtractor, type JsonServerSentEventStream } from "@ahoo-wang/fetcher-eventstream";
import { CommandResult } from "@ahoo-wang/fetcher-wow";
import { CartData } from "./cart/types";
import { ContentTypeValues } from "@ahoo-wang/fetcher";

/** 购物车 */
@api()
export class CartApiClient implements ApiMetadataCapable {
    constructor(public readonly apiMetadata: ApiMetadata = { basePath: 'example' }) {
    }

    /**
     * - operationId: `addCartItem`
     * - path: `/cart/{userId}/add-cart-item`
     */
    @post('/cart/{userId}/add-cart-item', {
        headers: { Accept: ContentTypeValues.TEXT_EVENT_STREAM },
        resultExtractor: JsonEventStreamResultExtractor,
    })
    addCartItem(@path('userId') userId: string, @request() httpRequest?: ParameterRequest, @attribute() attributes?: Record<string, any>): Promise<JsonServerSentEventStream<CommandResult>> {
        throw autoGeneratedError(userId, httpRequest, attributes);
    }

    /**
     * 自定义发送命令
     * - operationId: `customizeSendCmd`
     * - path: `/cart/{userId}/customize-send-cmd`
     */
    @post('/cart/{userId}/customize-send-cmd')
    customizeSendCmd(@path('userId') userId: string, @request() httpRequest?: ParameterRequest, @attribute() attributes?: Record<string, any>): Promise<CommandResult> {
        throw autoGeneratedError(userId, httpRequest, attributes);
    }

    /**
     * - operationId: `me`
     * - path: `/cart/me`
     */
    @get('/cart/me')
    me(@request() httpRequest?: ParameterRequest, @attribute() attributes?: Record<string, any>): Promise<CartData> {
        throw autoGeneratedError(httpRequest, attributes);
    }

    /**
     * - operationId: `meSync`
     * - path: `/cart/me/sync`
     */
    @get('/cart/me/sync')
    meSync(@request() httpRequest?: ParameterRequest, @attribute() attributes?: Record<string, any>): Promise<CartData> {
        throw autoGeneratedError(httpRequest, attributes);
    }
}
