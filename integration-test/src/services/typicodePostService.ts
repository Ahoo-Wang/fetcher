/*
 * Copyright [2021-present] [ahoo wang <ahoowang@qq.com> (https://github.com/Ahoo-Wang)].
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *      http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { api, autoGeneratedError, body, del, get, post, patch, path, put, query } from '@ahoo-wang/fetcher-decorator';
import { typicodeFetcher } from '../typicodeFetcher';
import { Post } from '../types';

@api('/posts', { fetcher: typicodeFetcher })
export class TypicodePostService {

  @get('')
  getPosts(): Promise<Post []> {
    throw autoGeneratedError();
  }

  @get('/{postId}')
  getPost(@path('postId') postId: string): Promise<Post> {
    throw autoGeneratedError();
  }

  @post('')
  createPost(@body() post: Post): Promise<Post> {
    throw autoGeneratedError();
  }

  @put('/{postId}')
  updatePost(@path('postId') postId: string, @body() post: Post): Promise<Post> {
    throw autoGeneratedError();
  }

  @patch('/{postId}')
  patchPost(@path('postId') postId: string, @body() post: Partial<Post>): Promise<Post> {
    throw autoGeneratedError();
  }

  @del('/{postId}')
  deletePost(@path('postId') postId: string): Promise<{}> {
    throw autoGeneratedError();
  }

  @get('')
  filterPosts(@query('userId') userId?: string, @query('completed') completed?: boolean): Promise<Post[]> {
    throw autoGeneratedError();
  }

}

export const typicodePostService = new TypicodePostService();