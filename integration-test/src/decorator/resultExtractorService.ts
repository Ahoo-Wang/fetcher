/*
 * Copyright [2021-present] [ahoo wang <ahoowang@qq.com> (https://github.com/Ahoo-Wang)].
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *      http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import {
  api,
  autoGeneratedError,
  get,
  ResultExtractors,
} from '@ahoo-wang/fetcher-decorator';
import { Post } from '../types';
import { typicodeFetcher } from '../fetcher';
import { FetchExchange } from '@ahoo-wang/fetcher';

@api('/posts', { fetcher: typicodeFetcher })
export class ResultExtractorService {
  /**
   * Get all posts as Json (Default)
   */
  @get('')
  getPosts(): Promise<Post[]> {
    throw autoGeneratedError();
  }

  /**
   * Get all posts as Response
   */
  @get('', { resultExtractor: ResultExtractors.Response })
  getPostsAsResponse(): Promise<Response> {
    throw autoGeneratedError();
  }

  /**
   * Get all posts as FetchExchange
   */
  @get('', { resultExtractor: ResultExtractors.Exchange })
  getPostsAsExchange(): Promise<FetchExchange> {
    throw autoGeneratedError();
  }

  /**
   * Get all posts as Text
   */
  @get('', { resultExtractor: ResultExtractors.Text })
  getPostsAsText(): Promise<string> {
    throw autoGeneratedError();
  }
}
