/*
 * Copyright [2021-present] [ahoo wang <ahoowang@qq.com> (https://github.com/Ahoo-Wang)].
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *      http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { api, autoGeneratedError, get, path } from '@ahoo-wang/fetcher-decorator';
import { typicodeFetcher } from '../fetcher';
import { Album, Post, Todo } from '../types';

@api('/users/{userId}', { fetcher: typicodeFetcher })
export class TypicodeUserService {

  @get('/albums')
  getAlbums(@path('userId') userId: string): Promise<Album []> {
    throw autoGeneratedError();
  }

  @get('/todos')
  getTodos(@path('userId') userId: string): Promise<Todo []> {
    throw autoGeneratedError();
  }

  @get('/posts')
  getPosts(@path('userId') userId: string): Promise<Post []> {
    throw autoGeneratedError();
  }
}

export const typicodeUserService = new TypicodeUserService();
